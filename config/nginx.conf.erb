upstream stage_craft_server {
  server <%= unicorn_config[:host] %>:<%= unicorn_config[:port] %> fail_timeout=0;
}

server {
  listen 80 default_server;
  server_name <%= nginx_config[:web_host] %>;

  # redirect non-www to www
  if ($host = '<%= nginx_config[:root_host] %>' ) {
    rewrite ^(.*)$ <%= nginx_config[:root_url] %>$1 permanent;
  }

  access_log  <%= nginx_config[:access_log] %> main;
  error_log  <%= nginx_config[:error_log] %> notice;

  root <%= current_path %>/web/public;

  location @app {
    # setup proxy to Sinatra
    proxy_read_timeout 600s;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://stage_craft_server;
  }

  location /assets/  {
    # setup proxy to Sinatra's AssetPack
    proxy_read_timeout 90s;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://stage_craft_server;

    proxy_cache assets;
    proxy_cache_key $scheme$proxy_host$uri$is_args$args;
    proxy_cache_valid 365d;
    proxy_cache_methods GET HEAD;
    proxy_ignore_headers Cache-Control Expires;

    expires max;
    add_header Cache-Control public;
    add_header Pragma public;
    add_header ETag "";

    break;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= current_path %>/web/public;
  }

  error_page 404 /404.html;
  location = /404.html {
    root <%= current_path %>/web/public;
  }

  try_files $uri @app;
}
